name: NPM Publish

on:
  push:
    branches:
      - main
    paths:
      - 'package.json'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (must match package.json version)'
        required: true
        type: string

jobs:
  check-version:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    outputs:
      version-changed: ${{ steps.check.outputs.changed }}
      new-version: ${{ steps.check.outputs.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Check if version changed
        id: check
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          git checkout HEAD~1
          PREVIOUS_VERSION=$(node -p "require('./package.json').version" 2>/dev/null || echo "0.0.0")
          git checkout -
          
          if [ "$CURRENT_VERSION" != "$PREVIOUS_VERSION" ]; then
            echo "Version changed from $PREVIOUS_VERSION to $CURRENT_VERSION"
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          else
            echo "Version unchanged ($CURRENT_VERSION)"
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

  publish:
    runs-on: ubuntu-latest
    needs: [check-version]
    if: |
      github.event_name == 'workflow_dispatch' || 
      (github.event_name == 'push' && needs.check-version.outputs.version-changed == 'true')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: Verify version consistency
        run: |
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            INPUT_VERSION="${{ github.event.inputs.version }}"
            if [ "$PACKAGE_VERSION" != "$INPUT_VERSION" ]; then
              echo "Error: package.json version ($PACKAGE_VERSION) does not match input version ($INPUT_VERSION)"
              exit 1
            fi
          fi
          echo "Version check passed: $PACKAGE_VERSION"

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

      - name: Build
        run: npm run build

      - name: Run lint
        run: npm run lint

      - name: Run typecheck
        run: npm run typecheck

      - name: Publish to NPM
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create Git Tag
        if: github.event_name == 'push'
        run: |
          VERSION=$(node -p "require('./package.json').version")
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git tag -a "v$VERSION" -m "Release v$VERSION"
          git push origin "v$VERSION"

      - name: Create GitHub Release
        if: github.event_name == 'push'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ needs.check-version.outputs.new-version }}
          generate_release_notes: true